# we are trying to analyze the python file by going through the same steps.
import numpy as np
flag = 'TamilCTF{this_one_is_a_liability_dont_fall_for_it}'

#The above is actually a fake flag 
#But we will use it for analysis purpose.

np.random.seed(369)
data = np.array([ord(c) for c in flag ])
data
array([ 84,  97, 109, 105, 108,  67,  84,  70, 123, 116, 104, 105, 115,
        95, 111, 110, 101,  95, 105, 115,  95,  97,  95, 108, 105,  97,
        98, 105, 108, 105, 116, 121,  95, 100, 111, 110, 116,  95, 102,
        97, 108, 108,  95, 102, 111, 114,  95, 105, 116, 125])
# random function which is used as the seed here is not actually random, if we every time repeat lines 8 and 9 we will get the same data array.

extra = np.random.randint(1,5,len(flag))
extra
array([4, 3, 2, 3, 3, 1, 1, 3, 3, 3, 3, 3, 3, 4, 1, 1, 3, 3, 1, 4, 4, 2,
       4, 3, 3, 4, 4, 1, 4, 1, 2, 3, 2, 3, 3, 4, 4, 4, 3, 4, 1, 2, 4, 3,
       1, 1, 3, 2, 3, 1])
#similarly the above also we will get everytime the same array if we follow lines 8,9,17.

product = np.multiply(data,extra)
product 
array([336, 291, 218, 315, 324,  67,  84, 210, 369, 348, 312, 315, 345,
       380, 111, 110, 303, 285, 105, 460, 380, 194, 380, 324, 315, 388,
       392, 105, 432, 105, 232, 363, 190, 300, 333, 440, 464, 380, 306,
       388, 108, 216, 380, 306, 111, 114, 285, 210, 348, 125])

temp1 = [x for x in data ]
temp1
[84, 97, 109, 105, 108, 67, 84, 70, 123, 116, 104, 105, 115, 95, 111, 110, 101, 95, 105, 115, 95, 97, 95, 108, 105, 97, 98, 105, 108, 105, 116, 121, 95, 100, 111, 110, 116, 95, 102, 97, 108, 108, 95, 102, 111, 114, 95, 105, 116, 125]
temp2 = [ord(x) for x in 'dondaVSclb' * 5]
temp2
[100, 111, 110, 100, 97, 86, 83, 99, 108, 98, 100, 111, 110, 100, 97, 86, 83, 99, 108, 98, 100, 111, 110, 100, 97, 86, 83, 99, 108, 98, 100, 111, 110, 100, 97, 86, 83, 99, 108, 98, 100, 111, 110, 100, 97, 86, 83, 99, 108, 98]
c = [ temp1[i] ^ temp2[i] for i in range(len(temp1)) ]
c
[48, 14, 3, 13, 13, 21, 7, 37, 23, 22, 12, 6, 29, 59, 14, 56, 54, 60, 5, 17, 59, 14, 49, 8, 8, 55, 49, 10, 0, 11, 16, 22, 49, 0, 14, 56, 39, 60, 10, 3, 8, 3, 49, 2, 14, 36, 12, 10, 24, 31]
flagdata = ('').join(hex(x)[2:].zfill(2) for x in c)
flagdata
'300e030d0d15072517160c061d3b0e38363c05113b0e31080837310a000b101631000e38273c0a03080331020e240c0a181f'
#here in the lines 39 and 40 we see that first the items in c are converted to hex that is 48 to 0x30 and then we neglect '0x' and then they are joined together. 

#now upto this part whatever we did was actually for analysing the code.

#exploit starts from here 

real_flag = '300e030d0d1507251700361a3a0127662120093d551c311029330c53022e1d3028541315363c5e3d063d0b250a090c52021f'

#above given is the final result of the actual flag.

#let's reverse it

real = list()
for i in range(0,100,2):
  real.append(real_flag[i:i+2]) 
real
['30', '0e', '03', '0d', '0d', '15', '07', '25', '17', '00', '36', '1a', '3a', '01', '27', '66', '21', '20', '09', '3d', '55', '1c', '31', '10', '29', '33', '0c', '53', '02', '2e', '1d', '30', '28', '54', '13', '15', '36', '3c', '5e', '3d', '06', '3d', '0b', '25', '0a', '09', '0c', '52', '02', '1f']

# We get the required array with elements but now we need to get the decimal output for our hex numbers.

for i in real:
  real_2.append(int(i,16)) 
real_2
[48, 14, 3, 13, 13, 21, 7, 37, 23, 0, 54, 26, 58, 1, 39, 102, 33, 32, 9, 61, 85, 28, 49, 16, 41, 51, 12, 83, 2, 46, 29, 48, 40, 84, 19, 21, 54, 60, 94, 61, 6, 61, 11, 37, 10, 9, 12, 82, 2, 31]

#our temp array remains the same 
temp
[100, 111, 110, 100, 97, 86, 83, 99, 108, 98, 100, 111, 110, 100, 97, 86, 83, 99, 108, 98, 100, 111, 110, 100, 97, 86, 83, 99, 108, 98, 100, 111, 110, 100, 97, 86, 83, 99, 108, 98, 100, 111, 110, 100, 97, 86, 83, 99, 108, 98]

temp3 = list()
temp3 = [temp2[i] ^ real_2[i] for i in range(len(temp2))]

temp4 = list()
for i in temp3:
  temp4.append(chr(i))
temp4
['T', 'a', 'm', 'i', 'l', 'C', 'T', 'F', '{', 'b', 'R', 'u', 'T', 'e', 'F', '0', 'r', 'C', 'e', '_', '1', 's', '_', 't', 'H', 'e', '_', '0', 'n', 'L', 'y', '_', 'F', '0', 'r', 'C', 'e', '_', '2', '_', 'b', 'R', 'e', 'A', 'k', '_', '_', '1', 'n', '}']

''.join(temp4)
'TamilCTF{bRuTeF0rCe_1s_tHe_0nLy_F0rCe_2_bReAk__1n}'

